<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description><![CDATA[
TEST1
     ]]></description>
        <expected-problems>5</expected-problems>
        <code><![CDATA[
public class Foo {
 public void test1() {
   for(;;) {
       String a = new String();
       Bar b = new Bar();
       Map <Integer, String> m = new Map<Integer, String>();
       List <String> l = new List<String>();
       Set <String> s = new Set<String>();
   }
 }
}
     ]]></code>
    </test-code>
    <test-code>
          <description><![CDATA[
<!--TEST2-->
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
 public void test1() {
   while(true) {
       String a = new String();
   }
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
TEST3
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
 public void test1() {
   do{
       String a = new String();
   }while(true) ;
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
TEST4
     ]]></description>
        <expected-problems>2</expected-problems>
        <code><![CDATA[
public class Foo {
 public void test1() {
   do{
       String a = new String();
       String b = new String();
   }while(true) ;
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
throw new is OK
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 public void test1() {
   for(;;) {
       throw new Exception();
   }
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
test for loop instantiation
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 public void test1() {
   for(String s : new List<String>()) {
       s += 'd';
   }
 }
}
     ]]></code>
    </test-code>

    <test-code>
        <description><![CDATA[
nested loop
     ]]></description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class Foo {
    public void test1() {
        for(String s : myList) {
            if (s == 'sth') {
                if (i > 6){
                    String s = new String();
                }
            }
        }
    }
}
     ]]></code>
    </test-code>
    <test-code>
        <description><![CDATA[
return new in loop is OK
     ]]></description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
 public String test1() {
   for(;;) {
       return new List<String>();
   }
 }
}
     ]]></code>
    </test-code>
    <test-code>
        <description>AvoidInstantiatingObjectsInLoops matches the right side of a list iteration loop</description>
        <expected-problems>1</expected-problems>
        <code><![CDATA[
public class TestInstantiationInLoop {
    public static void mainTest() {
        for (String test : new List<String>()) {
            if (x > 5) {
                Set<String> s = new Set<String>();
            } else {
                return new List<String>();
            }
        }
    }
}
        ]]></code>
    </test-code>
</test-data>
